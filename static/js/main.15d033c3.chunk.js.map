{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","theme","button","margin","spacing","input","display","root","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","iamgeViewer","App","classes","useState","files","setFiles","srcs","setSrcs","console","log","className","Typography","variant","gutterBottom","accept","multiple","type","onChange","event","reader","FileReader","onloadend","result","readAsDataURL","target","Array","from","map","file","capture","index","key","src","ReactDOM","render","document","getElementById"],"mappings":"4NAIMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,OAAQ,CACNC,OAAQF,EAAMG,QAAQ,IAExBC,MAAO,CACLC,QAAS,QAEXC,KAAM,CACJD,QAAS,OACTE,SAAU,OACVC,eAAgB,eAChBC,SAAU,SACVC,gBAAiBV,EAAMW,QAAQC,WAAWC,OAE5CC,SAAU,CACRC,MAAO,IACPC,OAAQ,KAEVC,KAAM,CACJC,MAAO,6BAETC,YAAa,CACXJ,MAAO,IACPC,OAAQ,SA+CGI,MA3Cf,WACE,IAAMC,EAAUvB,IADH,EAEawB,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAGUF,mBAAS,MAHnB,mBAGNG,EAHM,KAGAC,EAHA,KAmBb,OAfAC,QAAQC,IAAIL,GAgBV,yBAAKM,UAAU,OACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,+CAGA,2BAAOC,OAAO,UAAUC,UAAQ,EAACC,KAAK,OAAOC,SAlBvB,SAACC,GACzB,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,UAAY,WACjBd,EAAQY,EAAOG,SAEjBH,EAAOI,cAAcL,EAAMM,OAAOpB,MAAM,IAExCqB,MAAMC,KAAKR,EAAMM,OAAOpB,OAAOuB,KAAI,SAAAC,GAAI,OACrCvB,EAAS,GAAD,mBAAMD,GAAN,CAAaA,WAYrB,2BAAOY,KAAK,OAAOF,OAAO,UAAUe,QAAQ,WAC5C,6BACE,kBAAClB,EAAA,EAAD,CAAYC,QAAQ,MAApB,0CAIF,6BACGR,EAAMuB,KAAI,SAACC,EAAME,GAAP,OACT,yBAAKC,IAAKD,GACR,yBAAKE,IAAK1B,EAAMI,UAAWR,EAAQF,qBC9D/CiC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.15d033c3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Typography } from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  input: {\n    display: 'none',\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n  iamgeViewer: {\n    width: 150,\n    height: 150,\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [files, setFiles] = useState([]);\n  const [srcs, setSrcs] =useState(null);\n  console.log(files);\n\n  const hanldeSelectImage = (event) => {\n    let reader = new FileReader();\n    reader.onloadend = () => {\n      setSrcs(reader.result);\n    };\n    reader.readAsDataURL(event.target.files[0])\n\n    Array.from(event.target.files).map(file=> (\n      setFiles([ ...files, files ])\n    ));\n  \n  }\n\n  return (\n    <div className=\"App\">\n      <Typography variant=\"h4\" gutterBottom>\n        이미지 전송하기\n      </Typography>\n      <input accept=\"image/*\" multiple type=\"file\" onChange={hanldeSelectImage} />\n\n      <input type=\"file\" accept=\"image/*\" capture=\"camera\"/>\n      <div>\n        <Typography variant=\"h6\">\n          이미지 리스트\n        </Typography>        \n      </div>\n      <div>\n        {files.map((file, index)=>(\n          <div key={index} >\n            <img src={srcs} className={classes.iamgeViewer}></img>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}